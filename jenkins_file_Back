properties([pipelineTriggers([githubPush()])])
@Library('pipeline_library') _
gitCheckout(
    scmurl:'https://github.com/Amani-Ghaddab/ProjectDevops.git',
    branche:'refs/heads/main'
)
post {
        failure {
            script {              
                // Print information about all failed stages
                def failedStages = getFailedStages( currentBuild )
                echo "Failed stages:" + failedStages.join('')
}
}
}
sonarQubeForDotnet(
    projectName:'AosoBack',
    SonarQubeEnv:'SonarQube',
    SonarScannerMSBuildTool:'SonarScanner for MSBuild',
    sonarLogin:'fb8f79f3db7b0ef00c608367b4c8616b25d76484'
)
QualityGate(   
)

DeployDockerImages(
    projectName:'AosoBack',
    destinationFolder:'/srv/Aoso/DevOps/backend',
    dockerFileLocation:'Scripts/Back/Dockerfile',
    dockerComposeFileLocation: 'Scripts/Back/docker-compose-back.yml',
    nginxLocation:'Scripts/Back/nginx' 
)
nexusForDotnet(
    
)
dockerBuild(
    dockerComposeFileDestination: '/srv/Aoso/DevOps/backend/docker-compose-back.yml',
    dockerComposeLocation: '/usr/local/bin',
    containerName: 'back'
)
